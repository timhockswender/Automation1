import requests
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# --- Configuration ---
# Your email details
sender_email = "your_email@gmail.com"
password = "your_app_password"  # Use an app password, not your main password

# New: List of recipients
recipients = ["timhockswender@gmail.com", "chrishockswender@gmail.com"]

# Locations with their latitude and longitude
locations = {
    "Naples, FL": {"latitude": 26.1420, "longitude": -81.7948},
    "Davidson, NC": {"latitude": 35.5024, "longitude": -80.8437}
}

# --- Function to get the weather forecast ---
def get_weather(lat, lon):
    base_url = "https://api.open-meteo.com/v1/forecast"
    params = {
        "latitude": lat,
        "longitude": lon,
        "daily": "temperature_2m_max,temperature_2m_min,weathercode",
        "current_weather": True,
        "temperature_unit": "fahrenheit",
        "timezone": "America/New_York"
    }
    try:
        response = requests.get(base_url, params=params)
        response.raise_for_status()  # Raises an exception for bad status codes
        data = response.json()

        # Extract today's forecast
        current_temp = data["current_weather"]["temperature"]
        max_temp = data["daily"]["temperature_2m_max"][0]
        min_temp = data["daily"]["temperature_2m_min"][0]

        return f"Current Temp: {current_temp}°F | High: {max_temp}°F | Low: {min_temp}°F"
    except requests.exceptions.RequestException as e:
        return f"Could not retrieve weather: {e}"

# --- Build the email content ---
email_body = "Good morning!\n\nHere is your daily weather forecast:\n\n"

# Add weather for Naples
naples_forecast = get_weather(locations["Naples, FL"]["latitude"], locations["Naples, FL"]["longitude"])
email_body += f"Naples, FL: {naples_forecast}\n"
email_body += ""

# Add weather for Davidson
davidson_forecast = get_weather(locations["Davidson, NC"]["latitude"], locations["Davidson, NC"]["longitude"])
email_body += f"Davidson, NC: {davidson_forecast}\n"
email_body += ""

# --- Send the email ---
def send_email():
    msg = MIMEMultipart()
    msg['From'] = sender_email
    # New: Join the list of recipients into a comma-separated string for the 'To' header
    msg['To'] = ", ".join(recipients)
    msg['Subject'] = "Your Daily Weather Forecast"

    msg.attach(MIMEText(email_body, 'plain'))

    try:
        with smtplib.SMTP_SSL("smtp.gmail.com", 465) as server:
            server.login(sender_email, password)
            # New: Pass the list of recipients directly to sendmail
            server.sendmail(sender_email, recipients, msg.as_string())
        print("Email sent successfully!")
    except Exception as e:
        print(f"Error: {e}")

# Run the function
if __name__ == "__main__":
    send_email()
